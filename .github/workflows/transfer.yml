name: Transfer HuggingFace Models
run-name: Transfer ${{ github.event.inputs.model_name }}

on:
  workflow_dispatch:
    inputs:
      model_name:
        description: 'HuggingFace model name'
        required: true
        type: string
      split_size:
        description: 'Split size in MB (default: 800)'
        required: false
        default: '800'
        type: string

jobs:
  archive-models:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check disk space
        shell: pwsh
        run: |
          try {
            Get-Volume | Where-Object {$_.DriveLetter -ne $null} | ForEach-Object {
              $drive = $_
              if ($drive.Size -gt 0) {
                $freeGB = [math]::Round($drive.SizeRemaining/1GB, 2)
                $totalGB = [math]::Round($drive.Size/1GB, 2)
                $usedGB = [math]::Round(($drive.Size - $drive.SizeRemaining)/1GB, 2)
                $freePercent = [math]::Round(($drive.SizeRemaining/$drive.Size)*100, 1)
                Write-Host "Drive $($drive.DriveLetter):"
                Write-Host "  Total: ${totalGB} GB"
                Write-Host "  Used:  ${usedGB} GB"
                Write-Host "  Free:  ${freeGB} GB ($freePercent%)"
                Write-Host "-------------------"
              }
            }
          } catch {
            Write-Error "Error checking disk space: $_"
            exit 1
          }    

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -U "huggingface_hub[cli]" "huggingface_hub[hf_xet]"
          choco install 7zip -y

      - name: Create directories
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path ./models
          New-Item -ItemType Directory -Force -Path ./volumes

      - name: Download model
        shell: pwsh
        env:
          HF_MODEL: ${{ github.event.inputs.model_name }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          hf download --token $env:HF_TOKEN $env:HF_MODEL --local-dir ./models

      - name: Create volumes
        shell: pwsh
        env:
          SPLIT_SIZE: ${{ github.event.inputs.split_size }}
        run: |
          7z a -v"$env:SPLIT_SIZE"m ./volumes/model.7z ./models/*

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.model_name }}-${{ github.sha }}
          name: Model Archive - ${{ github.event.inputs.model_name }}
          draft: false
          prerelease: false
          files: ./volumes/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        shell: pwsh
        run: |
          Remove-Item -Path ./models -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item -Path ./volumes -Recurse -Force -ErrorAction SilentlyContinue